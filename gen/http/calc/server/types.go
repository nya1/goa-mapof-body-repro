// Code generated by goa v3.7.2, DO NOT EDIT.
//
// calc HTTP server types
//
// Command:
// $ goa gen calcsvc/design

package server

import (
	calc "calcsvc/gen/calc"

	goa "goa.design/goa/v3/pkg"
)

// MultiplyRequestBody is the type of the "calc" service "multiply" endpoint
// HTTP request body.
type MultiplyRequestBody struct {
	// pass any json object
	Anyobject map[string]interface{} `form:"anyobject,omitempty" json:"anyobject,omitempty" xml:"anyobject,omitempty"`
}

// NewMultiplyPayload builds a calc service multiply endpoint payload.
func NewMultiplyPayload(body *MultiplyRequestBody) *calc.MultiplyPayload {
	v := &calc.MultiplyPayload{}
	v.Anyobject = make(map[string]interface{}, len(body.Anyobject))
	for key, val := range body.Anyobject {
		tk := key
		tv := val
		v.Anyobject[tk] = tv
	}

	return v
}

// ValidateMultiplyRequestBody runs the validations defined on
// MultiplyRequestBody
func ValidateMultiplyRequestBody(body *MultiplyRequestBody) (err error) {
	if body.Anyobject == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("anyobject", "body"))
	}
	return
}
